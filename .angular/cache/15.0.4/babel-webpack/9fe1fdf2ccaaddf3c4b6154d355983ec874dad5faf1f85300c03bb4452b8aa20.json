{"ast":null,"code":"import { fromEvent, merge, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let ConnectivityService = /*#__PURE__*/(() => {\n  class ConnectivityService {\n    constructor() {\n      this.initConnectivityMonitoring();\n    }\n    initConnectivityMonitoring() {\n      if (!window || !navigator || !('onLine' in navigator)) return;\n      this.appIsOnline$ = merge(of(null), fromEvent(window, 'online'), fromEvent(window, 'offline')).pipe(map(() => navigator.onLine));\n    }\n  }\n  ConnectivityService.ɵfac = function ConnectivityService_Factory(t) {\n    return new (t || ConnectivityService)();\n  };\n  ConnectivityService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ConnectivityService,\n    factory: ConnectivityService.ɵfac,\n    providedIn: 'root'\n  });\n  return ConnectivityService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}