{"ast":null,"code":"import { IonReorderGroup } from '@ionic/angular';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../userstate.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ionic/angular\";\nfunction SettingsPage_ion_item_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-checkbox\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function SettingsPage_ion_item_6_Template_ion_checkbox_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const entry_r3 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(entry_r3.isChecked = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"ion-reorder\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(entry_r3.val);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", entry_r3.isChecked)(\"disabled\", ctx_r0.isDisabled);\n  }\n}\nfunction SettingsPage_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"ion-button\", 6);\n    i0.ɵɵlistener(\"click\", function SettingsPage_div_7_Template_ion_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.modifyHomescreen());\n    });\n    i0.ɵɵtext(2, \" Homescreen bearbeiten\\n\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction SettingsPage_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"ion-button\", 6);\n    i0.ɵɵlistener(\"click\", function SettingsPage_div_8_Template_ion_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.applyHomescreen());\n    });\n    i0.ɵɵtext(2, \" Fertig\\n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-button\", 6);\n    i0.ɵɵlistener(\"click\", function SettingsPage_div_8_Template_ion_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.resetHomescreen());\n    });\n    i0.ɵɵtext(4, \" Reset\\n\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let SettingsPage = /*#__PURE__*/(() => {\n  class SettingsPage {\n    constructor(userState) {\n      this.userState = userState;\n      this.form = [];\n      this.isDisabled = true;\n      //this.form = this.form.concat(this.userState.AppHomescreen);\n      console.log('in settings Constructor von settings.page');\n      //this.form = this.userState.AppHomescreen;\n      this.userState.homescreen.subscribe(form2 => {\n        //console.log(form2);\n        this.form = form2;\n      });\n    }\n    doReorder(ev) {\n      // Before complete is called with the items they will remain in the\n      // order before the drag\n      //console.log('Before complete', this.form);\n      //console.log('anzahl elemente='+this.form.length);\n      // The `from` and `to` properties contain the index of the item\n      // when the drag started and ended, respectively\n      //console.log('Dragged from index', ev.detail.from, 'to', ev.detail.to);\n      // Finish the reorder and position the item in the DOM based on\n      // where the gesture ended. This method can also be called directly\n      // by the reorder group\n      this.form = ev.detail.complete(this.form);\n    }\n    modifyHomescreen() {\n      this.isDisabled = false;\n    }\n    applyHomescreen() {\n      this.isDisabled = true;\n      //console.log('new layout', this.form);\n      this.userState.saveHomeSettings(this.form);\n    }\n    resetHomescreen() {\n      this.isDisabled = true;\n      this.userState.resetHomeSettings();\n      //console.log('resetted layout', this.form);\n      //this.form = this.userState.h;\n    }\n  }\n\n  SettingsPage.ɵfac = function SettingsPage_Factory(t) {\n    return new (t || SettingsPage)(i0.ɵɵdirectiveInject(i1.UserstateService));\n  };\n  SettingsPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SettingsPage,\n    selectors: [[\"app-settings\"]],\n    viewQuery: function SettingsPage_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(IonReorderGroup, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.reorderGroup = _t.first);\n      }\n    },\n    decls: 9,\n    vars: 4,\n    consts: [[3, \"disabled\", \"ionItemReorder\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"center\", 4, \"ngIf\"], [\"slot\", \"start\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"slot\", \"end\"], [1, \"center\"], [1, \"centerbtn\", 3, \"click\"]],\n    template: function SettingsPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Homescreen Settings\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"ion-content\")(5, \"ion-reorder-group\", 0);\n        i0.ɵɵlistener(\"ionItemReorder\", function SettingsPage_Template_ion_reorder_group_ionItemReorder_5_listener($event) {\n          return ctx.doReorder($event);\n        });\n        i0.ɵɵtemplate(6, SettingsPage_ion_item_6_Template, 5, 3, \"ion-item\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, SettingsPage_div_7_Template, 3, 0, \"div\", 2);\n        i0.ɵɵtemplate(8, SettingsPage_div_8_Template, 5, 0, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", ctx.isDisabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isDisabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isDisabled);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.NgControlStatus, i3.NgModel, i4.IonButton, i4.IonCheckbox, i4.IonContent, i4.IonHeader, i4.IonItem, i4.IonLabel, i4.IonReorder, i4.IonReorderGroup, i4.IonTitle, i4.IonToolbar, i4.BooleanValueAccessor],\n    styles: [\".centerbtn[_ngcontent-%COMP%]{margin:5 auto}.center[_ngcontent-%COMP%]{margin-top:15px;text-align:center}\"]\n  });\n  return SettingsPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}