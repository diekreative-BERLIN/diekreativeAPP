{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"../connectors/churchapi.service\";\nimport * as i3 from \"@angular/forms\";\nexport let TunSwapPage = /*#__PURE__*/(() => {\n  class TunSwapPage {\n    constructor(popover, churchtools) {\n      this.popover = popover;\n      this.churchtools = churchtools;\n    }\n    ngOnInit() {}\n    ClosePopover() {\n      this.popover.dismiss(\"abort\");\n    }\n    EnterNewPerson() {\n      console.log(\"neue Person eintragen: \" + this.person + \"  mit Typ:\" + this.typ + \" auf SessID \" + this.sessID + \" am:\" + this.startdate);\n      if (this.person == undefined) {\n        alert(\"bitte trag den Namen der Person ein, die für Dich die Gebetsschicht übernimmt\");\n      } else if (this.typ == undefined) {\n        alert(\"bitte noch die Gebetsform angeben. Z.B. A+F für Anbetung und Fürbitte\");\n      } else {\n        let oldentry = \"(\" + this.oldformat + \") \" + this.oldperson;\n        let ret = this.churchtools.swapSession(this.sessID, this.startdate, this.enddate, oldentry, this.person, this.typ);\n        console.log(\"Session getauscht. Ret=\" + JSON.stringify(ret));\n        this.popover.dismiss(\"success\");\n      }\n    }\n  }\n  TunSwapPage.ɵfac = function TunSwapPage_Factory(t) {\n    return new (t || TunSwapPage)(i0.ɵɵdirectiveInject(i1.PopoverController), i0.ɵɵdirectiveInject(i2.ChurchapiService));\n  };\n  TunSwapPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TunSwapPage,\n    selectors: [[\"app-tun-swap\"]],\n    decls: 25,\n    vars: 2,\n    consts: [[\"padding\", \"\"], [1, \"top\"], [\"src\", \"../../assets/icon/icon_close.svg\", 3, \"click\"], [1, \"face\"], [\"src\", \"../../assets/icon/people-sharp.svg\"], [1, \"question\"], [1, \"center\"], [\"placeholder\", \"Name\", 1, \"tun-input\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Gebetsform\", 1, \"tun-input\", 3, \"ngModel\", \"ngModelChange\"], [1, \"doit\", 3, \"click\"]],\n    template: function TunSwapPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-content\", 0);\n        i0.ɵɵtext(1, \" \\u00A0 \");\n        i0.ɵɵelementStart(2, \"ion-grid\")(3, \"ion-row\", 1)(4, \"ion-icon\", 2);\n        i0.ɵɵlistener(\"click\", function TunSwapPage_Template_ion_icon_click_4_listener() {\n          return ctx.ClosePopover();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"ion-row\")(6, \"ion-col\", 3);\n        i0.ɵɵelement(7, \"img\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtext(8, \" \\u00A0\\u00A0\\u00A0 \");\n        i0.ɵɵelementStart(9, \"ion-row\")(10, \"ion-col\", 5);\n        i0.ɵɵtext(11, \"Wer wird deine Schicht \\u00FCbernehmen?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(12, \"br\");\n        i0.ɵɵelementStart(13, \"ion-row\")(14, \"ion-col\", 6)(15, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function TunSwapPage_Template_input_ngModelChange_15_listener($event) {\n          return ctx.person = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"ion-row\")(17, \"ion-col\", 6)(18, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function TunSwapPage_Template_input_ngModelChange_18_listener($event) {\n          return ctx.typ = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(19, \"br\");\n        i0.ɵɵelementStart(20, \"ion-row\")(21, \"ion-col\", 6)(22, \"ion-button\", 9);\n        i0.ɵɵlistener(\"click\", function TunSwapPage_Template_ion_button_click_22_listener() {\n          return ctx.EnterNewPerson();\n        });\n        i0.ɵɵtext(23, \"eintragen\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtext(24, \" \\u00A0 \");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngModel\", ctx.person);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.typ);\n      }\n    },\n    dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i1.IonButton, i1.IonCol, i1.IonContent, i1.IonGrid, i1.IonIcon, i1.IonRow],\n    styles: [\".top[_ngcontent-%COMP%]{font-size:27px;position:fixed;right:100px}.face[_ngcontent-%COMP%]{position:relative;top:10px;text-align:center}.question[_ngcontent-%COMP%]{position:relative;top:5px;color:#777;font-family:Lato bold;text-align:center;font-style:bold;font-size:20px}.action[_ngcontent-%COMP%]{font-size:33px;position:relative;top:5px}.doit[_ngcontent-%COMP%]{font-family:Source Sans Pro;font-style:normal;font-weight:600;font-size:15px}.left[_ngcontent-%COMP%]{float:left}.right[_ngcontent-%COMP%]{float:right}.center[_ngcontent-%COMP%]{text-align:center}\"]\n  });\n  return TunSwapPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}