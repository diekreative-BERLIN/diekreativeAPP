{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\n//import {  AfterViewChecked } from '@angular/core';\nconst MEDIA_FOLDER_NAME = 'temp_files';\nlet PredigtElementComponent = class PredigtElementComponent {\n  constructor(userState, socialSharing, platform, router, iab, file, transfer) {\n    this.userState = userState;\n    this.socialSharing = socialSharing;\n    this.platform = platform;\n    this.router = router;\n    this.iab = iab;\n    this.file = file;\n    this.transfer = transfer;\n    this.fulltext = false;\n    this.playervisible = false;\n    this.localFiles = [];\n    //this.platform.backButton.subscribeWithPriority(10, () => {\n    //  this.router.navigate([\"/tabs/tab1\"]);\n    //});\n  }\n  //ngAfterViewChecked(): void {\n  //if(this.userState.AppPageMedienInit){\n  //this.userState.AppPageMedienInit = false;\n  //}\n  //}\n  //with initialization check if DIR exists and then load files. If not, create DIR.\n  ngOnInit() {\n    //console.log('ngInit predigt.element. AppPageMedienInit='+this.userState.AppPageMedienInit);\n    this.platform.ready().then(() => {\n      if (this.userState.AppPageMedienInit) {\n        this.userState.AppPageMedienInit = false;\n        console.log('Page is now ready. reset AppMageMedienInit');\n        let path = this.file.dataDirectory;\n        this.file.checkDir(path, MEDIA_FOLDER_NAME).then(() => {\n          this.loadFiles();\n        }, err => {\n          this.file.createDir(path, MEDIA_FOLDER_NAME, false);\n        });\n      }\n    });\n  }\n  //read files in local storage\n  loadFiles() {\n    this.file.listDir(this.file.dataDirectory, MEDIA_FOLDER_NAME).then(res => {\n      this.localFiles = res;\n      console.log('local files=' + JSON.stringify(this.localFiles));\n    }, err => console.log('error loading files: ', err));\n  }\n  isLocal(mp3file) {\n    // this.localFiles.find();\n    //let fileName = '/' + MEDIA_FOLDER_NAME + '/' + mp3file.substr(mp3file.lastIndexOf('/') + 1);\n    //console.log('check if file '+fileName+' is local');\n    let fileName = mp3file.substr(mp3file.lastIndexOf('/') + 1);\n    console.log('check if file ' + fileName + ' is local');\n    return this.localFiles.find(e => e.name === fileName);\n  }\n  expandTab() {\n    this.fulltext = true;\n  }\n  closeTab() {\n    this.fulltext = false;\n    this.playervisible = false;\n  }\n  toggleTab() {\n    if (this.fulltext) {\n      this.fulltext = false;\n    } else {\n      this.fulltext = true;\n    }\n  }\n  //  {\"isFile\":true,\"isDirectory\":false,\"name\":\"20201220_von_guten_maechten.mp3\",\"fullPath\":\"/temp_files/20201220_von_guten_maechten.mp3\",\"filesystem\":\"<FileSystem: library-nosync>\",\"nativeURL\":\"file:///Users/marc/Library/Developer/CoreSimulator/Devices/A8AD7578-C472-4367-9830-2817C7DD1A8C/data/Containers/Data/Application/8F85850F-B8E6-4625-978C-5ECD3903D42F/Library/NoCloud/temp_files/20201220_von_guten_maechten.mp3\"}\n  //2021-01-04 18:39:21.529492+0100 diekreative APP[17219:6452015] Login With token{\"status\":200,\"data\":\"{\\\"status\\\":\\\"success\\\",\\\"data\\\":\\\"Already logged in\\\"}\",\"headers\":{\"content-type\":\"application/json\",\"access-control-allow-origin\":\"http://localhost:8100\",\"pragma\":\"no-cache\",\"content-security-policy\":\"default-src 'self'; script-src 'self' js.stripe.com 'unsafe-eval' ; style-src 'self' 'unsafe-inline'; font-src 'self' data:; img-src * data: blob *.church.tools; child-src * data; connect-src *; object-src 'self' www.youtube.com\",\"x-powered-by\":\"PHP/7.3.25\",\"age\":\"0\",\"server\":\"Apache\",\"access-control-allow-methods\":\"POST, GET, OPTIONS, PUT, DELETE\",\"content-encoding\":\"gzip\",\"expires\":\"Thu, 19 Nov 1981 08:52:00 GMT\",\"access-control-allow-headers\":\"Content-Type, csrf-token\",\"via\":\"1.1 varnish (Varnish/6.5)\",\"cache-control\":\"no-store, no-cache, must-revalidate\",\"date\":\"Mon, 04 Jan 2021 17:39:21 GMT\",\"access-control-allow-credentials\":\"true\",\"content-length\":\"66\",\"accept-ranges\":\"bytes\",\"vary\":\"Accept-Encoding\",\"x-varnish\":\"907510684\"},\"url\":\"https://diekreative.org/churchtools/index.php?q=login/ajax&func=loginWithToken&q=login/ajax&token=nHh0hf3qDmkR7gerTiTFOrwkOWiDsOja6FiAC88w4625xSu8jWeJwSDRWiHikhqVI0NmG8DMQPBDyd4zqkNJC5KSBkOTmVWmYo3oLKC3wSBqGpe1Yjp9aPVXZ2YlazVqrGW4a26X7F5guj3kdjI1kc7IETNRLJdRHx5x6yPxCjdCgjzMqb76uvgkaELopGdbowfOhTy4JNdUajytsWe6AlrVQxKVSuh4vNG6avDDVVo6pHs1X6bIzYhjmKXeGTjQ&id=2\"}\n  //2021-01-04 18:39:21.530248+0100 diekreative APP[17219:6452015] login status=success\n  //console.log(\"Login With token\"+JSON.stringify(res));\n  //console.log(\"login status=\"+ (JSON.parse(res.data)).status)\n  // if((JSON.parse(res.data)).status==\"fail\")..\n  openPlayer(sermonURL) {\n    this.playervisible = true;\n    let fileresult = this.isLocal(sermonURL);\n    if (fileresult) {\n      console.log('currentSermonURL aus isLocal auslesen:' + JSON.stringify(fileresult));\n      console.log('Test1:');\n      //console.log( JSON.parse(fileresult.fullPath) );\n      console.log('Test2:');\n      //console.log( JSON.parse(fileresult).fullPath );\n      console.log('Test3:');\n      console.log(JSON.parse(JSON.stringify(fileresult)).fullPath);\n      this.currentSermonURL = JSON.parse(JSON.stringify(fileresult)).fullPath;\n    } else {\n      console.log('currentSermonURL aus original URL');\n      this.currentSermonURL = sermonURL;\n    }\n  }\n  closePlayer() {\n    this.playervisible = false;\n  }\n  shareLink(predigturl, titel, excerpt) {\n    var message = \"HÃ¶r dir diese Predigt an!\\n\\n\" + excerpt;\n    var subject = \"\" + titel;\n    var url = \"\" + predigturl;\n    var options = {\n      message: message,\n      subject: subject,\n      url: url\n    };\n    this.socialSharing.shareWithOptions(options);\n    //    console.log('share subject='+subject+'  url='+predigturl+'   und msg='+message);\n  }\n\n  openSkript(skript) {\n    if (skript != '') {\n      this.platform.ready().then(() => {\n        this.iab.create(skript, '_system');\n      });\n    }\n  }\n  playYT(YTlink) {\n    if (YTlink != '') {\n      this.platform.ready().then(() => {\n        this.iab.create(YTlink, '_system');\n      });\n    }\n  }\n  saveSermon(mp3link) {\n    //is file already there?\n    let fileresult = this.isLocal(mp3link);\n    //here encoding path as encodeURI() format.  \n    let url = encodeURI(mp3link);\n    let fileName = mp3link.substr(mp3link.lastIndexOf('/') + 1);\n    console.log('sichere Predigt Datei ' + fileName + ' von ' + mp3link);\n    //here initializing object. \n    this.fileTransfer = this.transfer.create();\n    // here iam mentioned this line this.file.externalRootDirectory is a native pre-defined file path storage. You can change a file path whatever pre-defined method.  \n    this.fileTransfer.download(url, this.file.dataDirectory + MEDIA_FOLDER_NAME + '/' + fileName, true).then(entry => {\n      //here logging our success downloaded file path in mobile.  \n      console.log('download completed: ' + entry.toURL());\n    }, error => {\n      //here logging our error its easier to find out what type of error occured.  \n      console.log('download failed: ' + error);\n    });\n  }\n};\n__decorate([Input()], PredigtElementComponent.prototype, \"predigt\", void 0);\nPredigtElementComponent = __decorate([Component({\n  selector: 'app-predigt-element',\n  templateUrl: './predigt-element.component.html',\n  styleUrls: ['./predigt-element.component.scss']\n})], PredigtElementComponent);\nexport { PredigtElementComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}